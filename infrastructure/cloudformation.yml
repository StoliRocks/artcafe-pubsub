AWSTemplateFormatVersion: '2010-09-09'
Description: 'ArtCafe.ai PubSub Service Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - staging
      - prod
    Description: Deployment environment
    
  NATSInstanceType:
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for NATS server
    
  APIInstanceType:
    Type: String
    Default: t3.small
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Description: EC2 instance type for API server
    
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access

Resources:
  # VPC and Networking
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-vpc-${Environment}
  
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-public-subnet-1-${Environment}
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-public-subnet-2-${Environment}
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-igw-${Environment}
  
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-public-rt-${Environment}
  
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable
      
  # Security Groups
  NATSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for NATS server
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4222
          ToPort: 4222
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8222
          ToPort: 8222
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-nats-sg-${Environment}
  
  APISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for API server
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-api-sg-${Environment}
          
  # DynamoDB Tables
  AgentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub artcafe-agents-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenant_id
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: tenant_id
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  SSHKeyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub artcafe-ssh-keys-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenant_id
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: tenant_id
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  ChannelTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub artcafe-channels-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenant_id
          AttributeType: S
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: tenant_id
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  TenantTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub artcafe-tenants-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  UsageMetricsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub artcafe-usage-metrics-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: tenant_id
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: tenant_id
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  # IAM Roles
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role
          
  # EC2 Instances
  NATSServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref NATSInstanceType
      SecurityGroupIds:
        - !Ref NATSSecurityGroup
      SubnetId: !Ref PublicSubnet1
      ImageId: ami-0f8e81a3da6e2510a  # Amazon Linux 2 AMI
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-nats-${Environment}
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          
          # Install Docker
          amazon-linux-extras install docker -y
          systemctl start docker
          systemctl enable docker
          
          # Pull and run NATS
          docker pull nats:latest
          docker run -d --name nats -p 4222:4222 -p 8222:8222 nats:latest
          
          # Add CloudWatch agent for monitoring
          yum install -y amazon-cloudwatch-agent
          
  APIServer:
    Type: AWS::EC2::Instance
    DependsOn: NATSServer
    Properties:
      InstanceType: !Ref APIInstanceType
      SecurityGroupIds:
        - !Ref APISecurityGroup
      SubnetId: !Ref PublicSubnet2
      ImageId: ami-0f8e81a3da6e2510a  # Amazon Linux 2 AMI
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref EC2InstanceProfile
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-api-${Environment}
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          
          # Install Python and dependencies
          amazon-linux-extras install python3.8 -y
          yum install -y git python3-pip
          
          # Install Docker
          amazon-linux-extras install docker -y
          systemctl start docker
          systemctl enable docker
          
          # Set up application directory
          mkdir -p /opt/artcafe/artcafe-pubsub

          # Upload application code (needs to be done manually or via CI/CD)
          # For now, create a minimal app that can be updated later
          cd /opt/artcafe/artcafe-pubsub
          
          # Create .env file
          cat > .env << EOL
          DEBUG=False
          JWT_SECRET_KEY=${AWS::StackName}
          NATS_SERVERS=["nats://${NATSServer.PrivateIp}:4222"]
          AGENT_TABLE_NAME=${AgentTable}
          SSH_KEY_TABLE_NAME=${SSHKeyTable}
          CHANNEL_TABLE_NAME=${ChannelTable}
          TENANT_TABLE_NAME=${TenantTable}
          USAGE_METRICS_TABLE_NAME=${UsageMetricsTable}
          EOL
          
          # Install dependencies
          pip3 install -r requirements.txt
          
          # Set up the service
          cat > /etc/systemd/system/artcafe-pubsub.service << EOL
          [Unit]
          Description=ArtCafe PubSub API
          After=network.target
          
          [Service]
          User=ec2-user
          WorkingDirectory=/opt/artcafe/artcafe-pubsub
          ExecStart=/usr/bin/python3.8 -m api.app
          Restart=always
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Enable and start the service
          systemctl daemon-reload
          systemctl enable artcafe-pubsub
          systemctl start artcafe-pubsub
          
          # Add CloudWatch agent for monitoring
          yum install -y amazon-cloudwatch-agent
          
  # Elastic IP for API
  APIEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref APIServer
      Tags:
        - Key: Name
          Value: !Sub artcafe-pubsub-api-eip-${Environment}
          
  # DNS Entry (optional)
  # Route53RecordSet:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     HostedZoneName: artcafe.ai.
  #     Name: !Sub pubsub-${Environment}.artcafe.ai.
  #     Type: A
  #     TTL: 300
  #     ResourceRecords:
  #       - !Ref APIEIP

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref VPC
    
  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    
  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    
  NATSServerIP:
    Description: NATS Server IP
    Value: !GetAtt NATSServer.PublicIp
    
  APIServerIP:
    Description: API Server IP
    Value: !Ref APIEIP
    
  APIServerURL:
    Description: API Server URL
    Value: !Sub http://${APIEIP}:8000
    
  AgentTableName:
    Description: Agent DynamoDB Table
    Value: !Ref AgentTable
    
  SSHKeyTableName:
    Description: SSH Key DynamoDB Table
    Value: !Ref SSHKeyTable
    
  ChannelTableName:
    Description: Channel DynamoDB Table
    Value: !Ref ChannelTable
    
  TenantTableName:
    Description: Tenant DynamoDB Table
    Value: !Ref TenantTable
    
  UsageMetricsTableName:
    Description: Usage Metrics DynamoDB Table
    Value: !Ref UsageMetricsTable